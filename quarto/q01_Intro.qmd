---
title: "Introduction"
---
GMACS, the Generalized Assessment Model for Crustacean Stocks, is a general modeling framework used to develop size-structured integrated stock assessment models for exploited crustacean stocks. GMACS is designed to be flexible, scalable, and useful for both data-limited and data-rich situations. Models developed using GMACS (henceforth, "GMACS models" or just "models") allow the user to determine the impact of fishing on both the historical and current abundance of an exploited population and to evaluate sustainable rates of removals (i.e., catches).

GMACS models can incorporate multiple data types from a variety of sources (e..g. fishery catch data, survey indices) and determine optimal values for unknown model parameters by statistically fitting the data in the form of an integrated analysis [@maunder_review_2013; @punt_review_2013]. This approach allows various kinds of data with different (and sometimes incomplete) collection histories to provide complementary information about fished stocks.

Initially developed to assess red king crab stocks in the eastern Bering Sea for the North Pacific Fishery Management Council, GMACS is designed with similar flexibility to that provided by age-structured stock assessment modeling frameworks like [Stock Synthesis](https://vlab.noaa.gov/web/stock-synthesis) and [CASAL](https://niwa.co.nz/fisheries/tools-resources/casal). Similar to these modeling frameworks, GMACS provides options to define a population sub-model that simulates stock biological dynamics (growth, maturity,fecundity, recruitment, molting), an observation sub-model that estimates expected values for different kind of data (e.g. fishery and/or survey abundance indices, fisheries discard data, size composition data, ...), and a statistical sub-model that quantifies goodness of fit and provides best-fitting parameters estimates and associated variances. The framework also provides options for determining management-related quantities such as $B_{MSY}$, $F_{MSY}$, and the sustainable harvest level under various assumptions, as well as the ability to project the population forward under different exploitation scenarios.

GMACS is an open source program based on the AD Model Builder ([ADMB](http://www.admb-project.org/); [@fournier_ad_2012]) C++ libraries for parameter estimation, and thus consists of a mixture of ADMB-specific `TPL` code as well as supplementary C++ code. The `gmacsbase.TPL` source code file and a library of C++ routines provide the majority of the functionality for models, but a `personal.TPL` file can be modified by the user to provide additional capabilities. 

## Source code repository

The repository with the GMACS TPL and C++ source code is hosted on GitHub at [GMACS_tpl-cpp_code](https://github.com/GMACS-project/GMACS_tpl-cpp_code.git). The base code was distributed by Andre Punt on Jan. 18, 2024 following the January 2024 Crab Modeling Workshop in Anchorage, AK. This repository is a bit "cleaner" than the [GMACS_Assessment_code](https://github.com/GMACS-project/GMACS_Assessment_code) repository because it contains **only** the base tpl code (`gmacsbase.TPL`), a template for the `personal.TPL` code, the src and include sub-folders with C++ code, a platform-independent CMake file to make the gmacs executable, a sub-folder with tests to ensure code changes don't break old models, and sub-folders to develop and host a users manual. The intention is to restrict the contents of this repository to these items and not to include individual stock assessments or related markdown code.

## Installation and compilation

As previously noted, GMACS uses the [ADMB](http://www.admb-project.org) C++ libraries, so these must be installed prior to installing and using GMACS. GMACS also provides a script for platform-independent installation using [cmake](https://cmake.org). 

For Windows users, it is recommended to install [RTools](https://cran.r-project.org/bin/windows/Rtools/rtools43/rtools.html) to provide compilers to build the ADMB libraries, a `cmake` executable, and unix-like shell functions for various file manipulation tasks. After installing RTools, the user should add the folder containing `g++.exe` to the front of their Windows PATH so that the RTools compiler/linker is found before any other version (this could be done on a per-terminal session basis). For RTools version 4.3, this would be `RTools`\x86_64-mingw32.static.posix\bin, where `RTools` is the top-level folder to which RTools was installed. In addition, add an environment variable `RToolsUsr` with the path to the `Rtools`\bin folder so that the unix-like shell commands are available in the Windows Command Prompt window.

For Mac OSX users, a `cmake` executable and gui can be installed from [https://cmake.org/download/](https://cmake.org/download/).

Once ADMB has been compiled, create the environment variable ADMB_HOME and set it equal to the path to the `admb` sub-folder of the `build` directory (i.e., the folder that contains `bin`, `include`, and `lib`). Also, copy (or rename) the libadm-contrib.xxxx.a file in the `lib` sub-folder to libadmb-contrib.a.

If you have not already done so, clone a copy of this repository to a folder on your local machine.

To compile the GMACS executable, open a command prompt (Windows) or terminal window (Mac OSX) and change directory to the top-level GMACS directory (i.e., the one that contains the gmacsbase.TPL, personal.TPL, and CMakeLists.txt files). Then run the following commands:

    * cmake -S . -B _build -G "Unix Makefiles"
    * cmake --build _build

The first command creates the `_build` subfolder and the Makefile appropriate for the given platform ("Unix Makefiles" appears to be an appropriate value for the -G option when compiling with RTools under either OSX or Windows). The second command builds the project by running the Makefile and (if successful) concatenates the gmacsbase.TPL and personal.TPL files as gmacs.tpl, copies this to `_build`, calls tpl2cpp on gmacs.tpl to create the associated .cpp and .htp files, and finally compiles the source and header files to create the gmacs executble in the `_build` folder (`gmacs` on Mac OSX and `gmacs.exe` on Windows).

Changes to the tpl or c++ files can be recompiled using "cmake --build _build", which will only update the compilation process for files changed since the last build (i.e., not recompiling everything). To "start from scratch", you can either delete the _build folder and run the two commands above again or run "cmake --build _build --target clean" (which deletes the gmacs executable, gmacs.tpl, gmacs.cpp, gmacs.htp and all the object files under the `_build` folder, but not the CMake-associated files) followed by "cmake --build _build".

### User manual 

A user manual (currently under construction) can be accessed [here](https://gmacs-project.github.io/GMACS_tpl-cpp_code/). It can also be built locally as html on your computer from the source distribution. It is written in Quarto Markdown, so you will need [Quarto](https://quarto.org) (which conveniently comes with [RStudio](https://posit.co/products/open-source/rstudio/)), installed on your computer to create the manual. Once Quarto is installed on your computer, you can create the manual using either a terminal (Command Prompt on Windows) or RStudio.

#### Using a terminal

  1. Open a terminal/Command Prompt window and change directory to the `quarto` subfolder of the local repository or source distribution
  2. run "quarto render" from the command prompt. 
  3. (2) will create the manual website in a `docs`subfolder of the local repo or source distribution. 
  4. The manual can be accessed by opening the index.html file in the `docs` subfolder using a web browser.
  
#### Using RStudio

  1. Open the quarto project in RStudio
    a. Start RStudio
    b. Click "Open Project..." on the `File` menu
  2. Under the `View` menu, click `Show Build` to show the `Build` window
  3. Click the "Render Website" icon in the `Build` window
  4. (3) will create the manual website in a `docs`subfolder of the local repo or source distribution. 
  5. The manual can be accessed by opening the index.html file in the `docs` subfolder using a web browser.

To re-render the local manual website (after, e.g., updating your local repository), delete the contents of the `docs` folder and re-run one of the sets of steps above.

### Code documentation 

A website with fairly extensive documentation for the TPL and C++ code can be created locally on your computer using [Doxygen](https://www.doxygen.nl/index.html). In order to do this, you will need doxygen installed on your computer (see the website for the latest version and installation instructions). 

#### Using Doxywizard

`Doxywizard` is a convenient graphical user interface provided to configure and run `doxygen`. To use the wizard, 
  1. Start `Doxywizard`
  2. From the `File` menu, Click "Open..." and select the configuration file "Doxygen" in the top folder of the repo/source distribution.
  3. Edit the following entries: 
    a. change the working directory in which doxygen will run to the path to your repo/source distribution.
    b. If you have `dot` installed to create diagrams.
      1. click the "Expert" button.
      2. In the "Topics" window, select "Dot".
      3. Scroll to the "DOT_PATH" entry and provide the path to the `dot` executable on your computer.
  4. Edit the various other entries in the "Wizard" or "Expert" views to suit your needs (the defaults will suit most needs).
  5. Click the "Run" button.
  6. Click the "Run doxygen" button to create the html documentation in the "doxy" subfolder.
  7. If successful, Use "File>Save" to save your changes to the configuration ("Doxyfile" or other) file.

The `Doxywizard` can also be used to create the documentation in other formats such as pdf or docbook by setting the appropriate options in the configuration file (see the online Doxygen documentation).

## Testing

The `testing/input_files` folder contains subfolders with suitable input files to test the compiled GMACS executable. The `testing/runs` folder contains two R files which can be used to test the models in the `testing/input_files` subfolders. To run the tests: 
    1. start an R session
    2. change the working directory to the `testing/runs` folder
    3. source the "runTests.r" file
    4. run the function "runTests" for the models of interest 
        a. set the `tests` input vector to the names of the subfolders containing the models you want to test
        b. set the top-level directory for running the tests (the default is ".", i.e. the `testing/runs` folder)
        c. set the `compareWithPin`, `verbose`, and `cleanup` flags as desired (`verbose` functionality is not yet implemented).
The function will run the models specified (copying the input files from relevant `testing/inut_files` subfolders). The output is a list with an element for each model tested. Each element indicates whether the test passed or, if not, where "substantial" differences (abs(new-old)>$10^{-5}$) occurred between the new par file and an old par file ("gmacs.par_old") or the pin file ("gmacs.pin") used to initialize the model.

## Which tools are available for working with GMACS?

Currently GMACS is linked to [`gmr`](gmacs-project.github.io/gmr/), an R package to work with GMACS in R, create plots of GMACS output, compare different models and prepare SAFE documents.

## The Gmacs development team{-}

[@tbl-contribs] summarizes the people who have worked on the Gmacs project since its inception. 


```{r echo =FALSE, out.width='80%',fig.align='center'}
#| label: tbl-contribs 
#| tbl-cap: GMACS development team - Contributors.
AFSC   = "Alaska Fisheries Science Center - NOAA";
ADFG   = "Alaska Department of Fish and Game";
UWSAFS = "School of Aquatic and Fishery Sciences - University of Washington";
ctr <- tibble::tribble(~Contributors,~Organization,
                        "Jim Ianelli",        AFSC,
                        "D'Arcy Webber",      "Quantfish",
                        "Cody Szuwalski",     AFSC,
                        "Jack Turnock",       AFSC,
                        "Jie Zheng",          ADFG,
                        "Hamachan Hamazaki",  ADFG,
                        "Athol Whitten",      UWSAFS,
                        "Andre Punt",         UWSAFS,
                        "David Fournier",     "Otter Research Ltd.",
                        "John Levitt",        "",
                        "Steve Martell",      "SeaState Inc.",
                        "Matthieu Veron",     UWSAFS,
                        "William Stockhausen",AFSC)

kableExtra::kbl(
  ctr, booktabs = TRUE, row.names=FALSE
) |> kableExtra::column_spec(1,bold=TRUE)
```

## NOAA Disclaimer

This repository is a scientific product and is not official communication of the National Oceanic and Atmospheric Administration, or the United States Department of Commerce. All NOAA GitHub project code is provided on an 'as is' basis and the user assumes responsibility for its use. Any claims against the Department of Commerce or Department of Commerce bureaus stemming from the use of this GitHub project will be governed by all applicable Federal law. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation or favoring by the Department of Commerce. The Department of Commerce seal and logo, or the seal and logo of a DOC bureau, shall not be used in any manner to imply endorsement of any commercial product or activity by DOC or the United States Government.

Software code created by U.S. Government employees is not subject to copyright in the United States (17 U.S.C. §105). The United States/Department of Commerce reserve all rights to seek and obtain copyright protection in countries other than the United States for Software authored in its entirety by the Department of Commerce. To this end, the Department of Commerce hereby grants to Recipient a royalty-free, nonexclusive license to use, copy, and create derivative works of the Software outside of the United States.

****************************

<img src="https://raw.githubusercontent.com/nmfs-general-modeling-tools/nmfspalette/main/man/figures/noaa-fisheries-rgb-2line-horizontal-small.png" height="75" alt="NOAA Fisheries">

[U.S. Department of Commerce](https://www.commerce.gov/) | [National Oceanographic and Atmospheric Administration](https://www.noaa.gov) | [NOAA Fisheries](https://www.fisheries.noaa.gov/)
